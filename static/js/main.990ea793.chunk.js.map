{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAgBeA,EAdF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACtB,OAEI,cADA,CACA,OAAKC,UAAY,uDAAjB,UACI,qBAAKC,IAAM,SAASC,IAAG,+BAA0BH,EAA1B,cACvB,gCACE,6BAAKF,IACL,4BAAIC,WCcHK,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACf,OACA,8BAEQA,EAAOC,KAAI,SAACC,EAAOC,GACf,OACA,cAAC,EAAD,CAEGR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCMTC,EAdG,SAAC,GAAmC,EAAjCC,YAAkC,IAApBC,EAAmB,EAAnBA,aAC/B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACIA,UAAU,gCACVW,KAAK,SACLC,YAAa,gBACbC,SAAYH,OCDbI,EAPA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,SAAS,SAASC,OAAO,kBAAkBC,OAAO,SAA/D,SACKJ,EAAMK,YCmBJC,E,kDApBX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IACDO,MAAM,CACPC,UAAS,GAHE,E,qDAOnB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAW,M,oBAG9B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,yDAEJG,KAAKX,MAAMK,a,GAhBCQ,aCkDZC,G,wDA5CX,aAAgB,IAAD,8BACX,gBAgBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAClB,YAAcsB,EAAMC,OAAOC,SAhB1C,EAAKX,MAAO,CACRlB,OAAO,GACPK,YAAY,IAJL,E,qDASf,WAAqB,IAAD,OAChByB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAKA,EAASC,UAE3BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACvB,OAASkC,S,oBAS3C,WAAU,IAAD,EAC0BZ,KAAKJ,MAA7BlB,EADF,EACEA,OAASK,EADX,EACWA,YACV8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAEzD,OAAStC,EAAOwC,OAIR,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACG,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1B,OAAQmC,WARjC,kD,GA7BMX,cCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACG,cAAC,EAAD,MAEHC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.990ea793.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name,email,id}) => {\r\n    return (\r\n        //<h1>RoboFriends</h1>\r\n        <div className = ' tc bg-light-green dib br3 pa1 ma2 grow bw2 shadow-5'>\r\n            <img alt = 'robots' src={`https://robohash.org/${id}?150*150`}/>\r\n            <div>\r\n              <h2>{name}</h2>\r\n              <p>{email}</p>\r\n              \r\n            </div>\r\n        </div>    \r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'; \r\n\r\nconst CardList = ({robots}) => {\r\n    return (\r\n    <div>\r\n        {\r\n            robots.map((user , i) => {\r\n                return (\r\n                <Card\r\n                   key={i} \r\n                   id={robots[i].id}\r\n                   name={robots[i].name} \r\n                   email={robots[i].email}\r\n                />\r\n                );\r\n            })\r\n        }\r\n\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ( {searchfield , searchChange} ) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input\r\n                className='pa3 ba b--green bg-light-blue'\r\n                type='search' \r\n                placeholder ='search robots'\r\n                onChange = {searchChange}\r\n           />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflow:'scroll',border:'5px solid black',height:'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default Scroll;","import React,{Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            hasError:false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError : true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oooops.That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n\r\n}\r\n\r\nexport default ErrorBoundry;","import React ,{Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    constructor () {\r\n        super()\r\n        this.state ={\r\n            robots:[],\r\n            searchfield:''\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response =>  response.json())\r\n        //.then(users => {});\r\n        .then(users => this.setState({robots : users}));\r\n       \r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield : event.target.value})\r\n        }\r\n    \r\n    \r\n    render() {\r\n        const {robots , searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })  \r\n        return ! robots.length ?\r\n            <h1>Loading.....</h1> :\r\n    \r\n            (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                       <ErrorBoundry>\r\n                           <CardList robots={filteredRobots}/>\r\n                       </ErrorBoundry>\r\n                    </Scroll>\r\n                    \r\n                </div>\r\n            );\r\n    }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n// import Card from './Card';\n// import CardList from './CardList';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n     <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}